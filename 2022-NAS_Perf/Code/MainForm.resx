<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="benchmarkButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        dAAAEnQB3mYfeAAAAXJJREFUWEftlWGuhDAIhD26R/NmLl+BtrrFtq4m78ebZALbDjCiyS4V9ht8DPuy
        73Nc10dNaNPyZH2agVXjz8gGtm3rMunfNNBD0r9igGYz/AsGJhlCDdTrHckl+itjE1dAe7Wt0rhqPpI/
        awDBDB83YMLUfCSXSNMRulaiQ/sYSmNoBSP5jQ0k+pkwQQ0gmKHUzRiAdS7MUAN+SfORXOKMAcvqTWSU
        xrAIujnNekSnOL4GYYYa4HKGUtfbABrL6uGgYQCSIxzJJV4Z4N6y83BQ5/IDmR7m5iN5ZIA7j2iIZgJ4
        zNCGs7SmZ3KuOL7zKm8iC0fJk503wLmiDPQNGEPkhi3SrHXu8GGK4/B0IrmdhUjCCBRfodR/Dwf87hpA
        cIfUMrge3tJYDJGcRqA4ArX1oPrJHa5hUASTthEZ0Lrjh9kCd68ZgNG9wzUMipAEM5ypcW2aFMC8tkHx
        FXr39P830DXwNnsG5P+l/QE9SRtlWJYP92a2jOn5rrgAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAEAAAAAADoAgAAFgAAACgAAAAgAAAAQAAAAAEABAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAgICAAMDAwAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwD/BwAAAAAAAAAAAAAABwD/dwd3AAAAAAAAAA
        AAAAD/9/8Hd3cAAAAAAAAAAAB////3cAd3cAAAAAAAAAAAfy/3eIdwB3AAAAcAAHAAAH/3eIcIcHAAAA
        cA/wcAcAAHd4h3CHcAcAcA/3cHdwBwAH8HIgh3cAAA//f/B3d3AAB/AiIId3AAf///93AHd3AAfwIiCH
        dwAH8v93iHcAdwAH8CIgh3AAB/93iHCHBwAAB/CnD3dwAAB3eIdwh3AHAAf3CPd4dwAAB/B2YId3AAAH
        //d3d3AAAAfwZmCHdwAAAHd3cAAAAAAH8GZgh3cAAIiIcAAHAAAAB/BmYIdwAAAAAA/wcAcAAAfw5w93
        cAAAcA/3cHdwBwAH9wj3eHcAAA//f/B3d3AAB//3d3dwAAf///93AHd3AAB3d3AAAAAH8v93iHcAdwAA
        AAAAAAAAB/93iHCHBwAAAAAAAAAAAAB3eIAAh3AHAAAAAAAAAAAAB/AEQId3AAAAAAAAAAAAAAfwRECH
        dwAAAAAAAAAAAAAH8ERAh3cAAAAAAAAAAAAAB/BEQIdwAAAAAAAAAAAAAAfwxw93cAAAAAAAAAAAAAAH
        9wj3eHcAAAAAAAAAAAAAB//3d3dwAAAAAAAAAAAAAAB3d3AAAAD///4f///wB///wAH//4AA//+AAP//
        gAD8D4AA8APAAMAA4AGAAGABgABgAYAAYAOAAGADwABgA+AB4AfgAcB/4AEAD+AAwAPgA8AA4AOAAOAH
        gADwf4AA//+AAP//wAD//+AB///gAf//4AH//+AD///gA///4AP//+AH///wfw==
</value>
  </data>
</root>